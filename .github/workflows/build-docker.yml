name: grocy docker container

on:
  release:
    types: [published]

jobs:
  build_and_push_latest:
    runs-on: ubuntu-latest
    env:
      GROCY_IMAGE_TAG: ${{ github.event.release.tag_name }}
    steps:
    - uses: actions/checkout@v2
    # Enable Ubuntu development (impish) repository packages, to ensure that a recent version of 'buildah' is available
    - run: echo "deb http://archive.ubuntu.com/ubuntu/ impish main universe" | sudo tee -a /etc/apt/sources.list
    - run: echo "deb http://archive.ubuntu.com/ubuntu/ impish-security main universe" | sudo tee -a /etc/apt/sources.list
    - run: sudo apt-get update
    - run: sudo apt-get install -y buildah qemu-user-static
    # Build multi-architecture container manifests
    - id: build-grocy-backend
      uses: redhat-actions/buildah-build@v2.9
      with:
        image: backend
        tags: ${{ github.event.release.tag_name }}
        platforms: linux/amd64, linux/arm64/v8
        containerfiles: Dockerfile-grocy-backend
        build-args: |
          GROCY_VERSION=v3.3.0
          COMPOSER_VERSION=2.1.5
          COMPOSER_CHECKSUM=be95557cc36eeb82da0f4340a469bad56b57f742d2891892dcb2f8b0179790ec
    - id: build-grocy-frontend
      uses: redhat-actions/buildah-build@v2.9
      with:
        image: frontend
        tags: ${{ github.event.release.tag_name }}
        platforms: linux/amd64, linux/arm64/v8
        containerfiles: Dockerfile-grocy-frontend
        build-args: |
          GROCY_VERSION=v3.3.0
    # Publish the container manifests
    - uses: redhat-actions/push-to-registry@v2.5
      with:
        image: ${{ steps.build-grocy-backend.outputs.image }}
        tags: ${{ github.event.release.tag_name }}
        registry: docker.io/grocy
        username: ${{ secrets.DOCKERHUB_USERNAME }}
        password: ${{ secrets.DOCKERHUB_TOKEN }}
    - uses: redhat-actions/push-to-registry@v2.5
      with:
        image: ${{ steps.build-grocy-frontend.outputs.image }}
        tags: ${{ github.event.release.tag_name }}
        registry: docker.io/grocy
        username: ${{ secrets.DOCKERHUB_USERNAME }}
        password: ${{ secrets.DOCKERHUB_TOKEN }}
